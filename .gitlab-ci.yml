.prepare:go:
  image: golang
  before_script:
  - export NS_DIR=$GOPATH/src/gitlab.com/$CI_PROJECT_NAMESPACE
  - export PROJ_DIR=$NS_DIR/$CI_PROJECT_NAME
  - mkdir -p $NS_DIR
  - ln -s $CI_PROJECT_DIR $PROJ_DIR
  - cd $PROJ_DIR
  - go get ./...

stages:
#- build
#  - test
#- image
- deploy

#build:download:
#  stage: build
#  extends: .prepare:go
#  artifacts:
#    paths:
##      - download/
#    - docker/
#
#  script:
##    - mkdir download
##
##    - GOOS=linux GOARCH=386 go build -o bin/${CI_PROJECT_NAME} ./cmd/...
##    - tar -czf download/httprelay_linux_386.tar.gz -C bin .
##    - rm -r bin
##
##    - GOOS=linux GOARCH=amd64 go build -o bin/${CI_PROJECT_NAME} ./cmd/...
##    - tar -czf download/httprelay_linux_amd64.tar.gz -C bin .
##    - rm -r bin
##
##    - GOOS=linux GOARCH=arm go build -o bin/${CI_PROJECT_NAME} ./cmd/...
##    - tar -czf download/httprelay_linux_arm.tar.gz -C bin .
##    - rm -r bin
##
##    - GOOS=linux GOARCH=arm64 go build -o bin/${CI_PROJECT_NAME} ./cmd/...
##    - tar -czf download/httprelay_linux_arm64.tar.gz -C bin .
##    - rm -r bin
##
##    - GOOS=windows GOARCH=amd64 go build -o bin/${CI_PROJECT_NAME}.exe ./cmd/...
##    - tar -czf download/httprelay_windows_arm64.tar.gz -C bin .
##    - rm -r bin
##
##    - GOOS=darwin GOARCH=amd64 go build -o bin/${CI_PROJECT_NAME} ./cmd/...
##    - tar -czf download/httprelay_macosx_arm64.tar.gz -C bin .
##    - rm -r bin
#
#    - mkdir docker
#    - CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-w -s" -o docker/${CI_PROJECT_NAME} ./cmd/...

#test:race:
#  stage: test
#  extends: .prepare:go
#  script:
#    - go build --race ./cmd/...
#
#test:integration:
#  stage: test
#  extends: .prepare:go
#  script:
#    - go test ./test/... -cover

build:docker:img:
  stage: image
  image: docker:stable
  services:
  - docker:dind
  variables:
    CONTAINER_IMAGE: registry.gitlab.com/$CI_PROJECT_PATH
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
#  artifacts:
#    paths:
#    - docker/
  script:
#  - echo "nobody:x:65534:65534:Nobody:/:" > docker/passwd
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
#  - docker pull $CONTAINER_IMAGE:latest || true
  - docker build --tag $CONTAINER_IMAGE:$CI_COMMIT_SHA --tag $CONTAINER_IMAGE .
  - docker push $CONTAINER_IMAGE:$CI_COMMIT_SHA
  - docker push $CONTAINER_IMAGE

#deploy:aws:
#  stage: deploy
#  dependencies: []
#  variables:
#    GIT_STRATEGY: none
#  image:
#    name: robpco/awscli
#    entrypoint:
#      - '/usr/bin/env'
#      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
#  script:
#    - aws ecs update-service --cluster httprelay --service httprelay-service --force-new-deployment

k8s:deploy:prod:
  stage: deploy
  dependencies: []
  variables:
    GIT_STRATEGY: none
  image: roffe/kubectl
#  services:
#    - docker:dind
  script:
  - kubectl config set-cluster deploy-cluster --server="$K8S_URL" --insecure-skip-tls-verify=true
  - kubectl config set-credentials deployer --token="$K8S_TOKEN"
  - kubectl config set-context deploy-context --cluster=deploy-cluster --user=deployer
  - kubectl config use-context deploy-context
  - kubectl get po
  - kubectl set image deployments/httprelay-deployment httprelay=registry.gitlab.com/jonas.jasas/httprelay:$CI_COMMIT_SHA