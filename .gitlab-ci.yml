image: golang

before_script:
  - export NS_DIR=$GOPATH/src/gitlab.com/$CI_PROJECT_NAMESPACE
  - export PROJ_DIR=$NS_DIR/$CI_PROJECT_NAME
  - mkdir -p $NS_DIR
  - ln -s $CI_PROJECT_DIR $PROJ_DIR
  - cd $PROJ_DIR
  - mkdir download
  - go get ./...

stages:
  - build
  - deploy

test race:
  stage: build
  script:
    - go build --race ./cmd/...

test integration:
  stage: build
  script:
    - go test ./test/... -cover

build linux 386:
  stage: build
  artifacts:
    paths:
      - download/
  script:
    - GOOS=linux GOARCH=386 go build -o bin/${CI_PROJECT_NAME} ./cmd/...
    - tar -czf download/httprelay_linux_386.tar.gz -C bin .

build linux amd64:
  stage: build
  artifacts:
    paths:
      - download/
  script:
    - GOOS=linux GOARCH=amd64 go build -o bin/${CI_PROJECT_NAME} ./cmd/...
    - tar -czf download/httprelay_linux_amd64.tar.gz -C bin .

build linux arm:
  stage: build
  artifacts:
    paths:
      - download/
  script:
    - GOOS=linux GOARCH=arm go build -o bin/${CI_PROJECT_NAME} ./cmd/...
    - tar -czf download/httprelay_linux_arm.tar.gz -C bin .

build linux arm64:
  stage: build
  artifacts:
    paths:
      - download/
  script:
    - GOOS=linux GOARCH=arm64 go build -o bin/${CI_PROJECT_NAME} ./cmd/...
    - tar -czf download/httprelay_linux_arm64.tar.gz -C bin .

build windows amd64:
  stage: build
  artifacts:
    paths:
      - download/
  script:
    - GOOS=windows GOARCH=amd64 go build -o bin/${CI_PROJECT_NAME}.exe ./cmd/...
    - tar -czf download/httprelay_windows_arm64.tar.gz -C bin .

build macosx amd64:
  stage: build
  artifacts:
    paths:
      - download/
  script:
    - GOOS=darwin GOARCH=amd64 go build -o bin/${CI_PROJECT_NAME} ./cmd/...
    - tar -czf download/httprelay_macosx_arm64.tar.gz -C bin .

build docker:
  stage: build
  artifacts:
    paths:
      - docker/
  script:
    - CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-w -s" -o docker/${CI_PROJECT_NAME} ./cmd/...

deploy docker:
  stage: deploy
  image: docker
  artifacts:
    paths:
      - docker/
  script:
    - echo "nobody:x:65534:65534:Nobody:/:" > docker/passwd
    - docker build -t httprelay .