.prepare:go:
  image: golang
  before_script:
    - export NS_DIR=$GOPATH/src/gitlab.com/$CI_PROJECT_NAMESPACE
    - export PROJ_DIR=$NS_DIR/$CI_PROJECT_NAME
    - mkdir -p $NS_DIR
    - ln -s $CI_PROJECT_DIR $PROJ_DIR
    - cd $PROJ_DIR
    - go get ./...

stages:
#  - test
#  - build
#  - image
  - deploy

deploy:release:
  stage: deploy
  image: pstauffer/curl

  script:
    - >
      curl --header 'Content-Type: application/json' --header "PRIVATE-TOKEN: $API_TOKEN"
      --data '{ "name": "New release", "tag_name": "v2", "description": "Super nice release", "assets": { "links": [{ "name": "hoge", "url": "https://google.com" }] } }'
      --request POST https://gitlab.com/api/v4/projects/11083648/releases



#test:race:
#  stage: test
#  extends: .prepare:go
#  only:
#    - tags
#
#  script:
#    - go build --race ./cmd/...
#
#test:integration:
#  stage: test
#  extends: .prepare:go
#  only:
#    - tags
#
#  script:
#    - go test ./test/... -cover
#
#build:download:
#  stage: build
#  extends:
#    - .prepare:go
#
#  only:
#    - tags
#    - /v\d*/
#
#  artifacts:
#    paths:
#      - download/
#
#  script:
#    - mkdir download
#
#    - GOOS=linux GOARCH=386 go build -ldflags "-X gitlab.com/jonas.jasas/httprelay/pkg/server.Version=$CI_COMMIT_TAG" -o bin/${CI_PROJECT_NAME} ./cmd/...
#    - tar -czf download/httprelay_linux_386_$CI_COMMIT_TAG.tar.gz -C bin .
#    - rm -r bin
#
#    - GOOS=linux GOARCH=amd64 go build -ldflags "-X gitlab.com/jonas.jasas/httprelay/pkg/server.Version=$CI_COMMIT_TAG" -o bin/${CI_PROJECT_NAME} ./cmd/...
#    - tar -czf download/httprelay_linux_amd64_$CI_COMMIT_TAG.tar.gz -C bin .
#    - rm -r bin
#
#    - GOOS=linux GOARCH=arm go build -ldflags "-X gitlab.com/jonas.jasas/httprelay/pkg/server.Version=$CI_COMMIT_TAG" -o bin/${CI_PROJECT_NAME} ./cmd/...
#    - tar -czf download/httprelay_linux_arm_$CI_COMMIT_TAG.tar.gz -C bin .
#    - rm -r bin
#
#    - GOOS=linux GOARCH=arm64 go build -ldflags "-X gitlab.com/jonas.jasas/httprelay/pkg/server.Version=$CI_COMMIT_TAG" -o bin/${CI_PROJECT_NAME} ./cmd/...
#    - tar -czf download/httprelay_linux_arm64_$CI_COMMIT_TAG.tar.gz -C bin .
#    - rm -r bin
#
#    - GOOS=windows GOARCH=amd64 go build -ldflags "-X gitlab.com/jonas.jasas/httprelay/pkg/server.Version=$CI_COMMIT_TAG" -o bin/${CI_PROJECT_NAME}.exe ./cmd/...
#    - tar -czf download/httprelay_windows_amd64_$CI_COMMIT_TAG.tar.gz -C bin .
#    - rm -r bin
#
#    - GOOS=darwin GOARCH=amd64 go build -ldflags "-X gitlab.com/jonas.jasas/httprelay/pkg/server.Version=$CI_COMMIT_TAG" -o bin/${CI_PROJECT_NAME} ./cmd/...
#    - tar -czf download/httprelay_macosx_arm64_$CI_COMMIT_TAG.tar.gz -C bin .
#    - rm -r bin
#
#build:docker:img:
#  stage: build
#  image: docker:stable
#
#  only:
#    - tags
#
#  services:
#    - docker:dind
#
#  variables:
#    CONTAINER_IMAGE: registry.gitlab.com/$CI_PROJECT_PATH
#    DOCKER_HOST: tcp://docker:2375
#    DOCKER_DRIVER: overlay2
#
#  script:
#    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
#    - docker build --tag $CONTAINER_IMAGE:$CI_COMMIT_TAG .
#    - '[[ $CI_COMMIT_TAG != *-* ]] && docker tag $CONTAINER_IMAGE:$CI_COMMIT_TAG $CONTAINER_IMAGE'
#    - docker push $CONTAINER_IMAGE
#
#pages:
#  stage: deploy
#  image: alpine:latest
#  script:
#    - echo 'Nothing to do...'
#  artifacts:
#    paths:
#      - public
#  only:
#    - master
